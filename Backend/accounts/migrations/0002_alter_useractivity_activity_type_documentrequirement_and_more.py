# Generated by Django 5.2.5 on 2025-10-04 10:37

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='useractivity',
            name='activity_type',
            field=models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('vote_cast', 'Vote Cast'), ('profile_update', 'Profile Update'), ('biometric_auth', 'Biometric Authentication'), ('election_created', 'Election Created'), ('candidate_approved', 'Candidate Approved'), ('voter_registered', 'Voter Registered'), ('application_submitted', 'Application Submitted'), ('document_uploaded', 'Document Uploaded'), ('application_reviewed', 'Application Reviewed')], max_length=25),
        ),
        migrations.CreateModel(
            name='DocumentRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(choices=[('voter', 'Voter Registration'), ('candidate', 'Candidate Application')], max_length=20)),
                ('document_type', models.CharField(choices=[('national_id', 'National ID Card'), ('passport', 'Passport'), ('birth_certificate', 'Birth Certificate'), ('proof_of_residence', 'Proof of Residence'), ('educational_certificate', 'Educational Certificate'), ('criminal_background_check', 'Criminal Background Check'), ('tax_clearance', 'Tax Clearance Certificate'), ('party_nomination', 'Political Party Nomination'), ('affidavit', 'Sworn Affidavit'), ('medical_certificate', 'Medical Certificate'), ('other', 'Other Document')], max_length=30)),
                ('is_required', models.BooleanField(default=True)),
                ('description', models.TextField(help_text='Description of what this document should contain')),
                ('max_file_size_mb', models.PositiveIntegerField(default=5)),
                ('allowed_formats', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'document_requirements',
                'unique_together': {('application_type', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='RoleApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(choices=[('voter', 'Voter Registration'), ('candidate', 'Candidate Application')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('documents_required', 'Documents Required')], default='pending', max_length=20)),
                ('application_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('political_party', models.CharField(blank=True, max_length=100, null=True)),
                ('campaign_slogan', models.CharField(blank=True, max_length=200, null=True)),
                ('manifesto', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'role_applications',
                'ordering': ['-application_date'],
                'unique_together': {('user', 'application_type', 'status')},
            },
        ),
        migrations.CreateModel(
            name='ApplicationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('national_id', 'National ID Card'), ('passport', 'Passport'), ('birth_certificate', 'Birth Certificate'), ('proof_of_residence', 'Proof of Residence'), ('educational_certificate', 'Educational Certificate'), ('criminal_background_check', 'Criminal Background Check'), ('tax_clearance', 'Tax Clearance Certificate'), ('party_nomination', 'Political Party Nomination'), ('affidavit', 'Sworn Affidavit'), ('medical_certificate', 'Medical Certificate'), ('other', 'Other Document')], max_length=30)),
                ('document_file', models.FileField(upload_to='application_documents/%Y/%m/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='accounts.roleapplication')),
            ],
            options={
                'db_table': 'application_documents',
                'ordering': ['-upload_date'],
                'unique_together': {('application', 'document_type')},
            },
        ),
    ]
